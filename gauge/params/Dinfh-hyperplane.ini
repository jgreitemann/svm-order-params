# Simulation of the gauge model with quadrupolar order
#
# The associated order parameter is the nematic quadrupolar order Q, hence
# a rank-2 order parameter. Only one "color" vector per site is needed to
# describe the orientation, and a single-site cluster is used.
#
# The critical temperature for this transition is T_c = 0.52 assuming J_1 = 0
# and J_3 = 1. When tuning the couplings (at constant temperature T = 1)
# instead, this translates into a critical coupling of J_3 = 1.92.
# The "hyperplane" classifier is used to classify samples as "ORDERED" or
# "DISORDERED" relative to this critical coupling.
#
# 50 different J_3 couplings are drawn uniformly from the interval [0, 4]
# using the sweep policy "uniform_line".
# 100 samples of the spin configuration are taken per coupling.
#
# $ mpirun -n 4 gauge-sample Dinfh-hyperplane.ini               (approx. 6 mins)
#     runs the simulation, collects samples and saves those to
#     Dinfh-hyperplane.clone.h5.
#
# $ gauge-learn Dinfh-hyperplane.clone.h5
#     classifies the samples as "ORDERED" or "DISORDERED" depending on which
#     side of the hyperplane their corresponding parameter point falls and
#     performs the SVM optimization with respect to that, storing the
#     optimization result in Dinfh-hyperplane.out.h5.
#
# $ gauge-coeffs Dinfh-hyperplane.out.h5 -u --result=Dinfh --diff
#     extracts the coefficient matrix describing the nematicity for the single
#     transition between samples from the ORDERED and DISORDERED phases.
#     Additionally, the deviation of the coefficient matrix from the result is
#     calculated and output.
#
# $ mpirun -n 4 gauge-test Dinfh-hyperplane.out.h5              (approx. 5 mins)
#     runs the MC simulation at 28 points along the line from J_3=0 to J_3=4,
#     measuring the SVM decision function as an observable.
#     The results are written to Dinfh-hyperplane.test.txt;
#     the decision function can be plotted using
#
#     gnuplot> plot 'Dinfh-hyperplane.test.txt' u 2:7:8 w yerrorlines

# Simulation runtime
total_sweeps = 2000
thermalization_sweeps = 1000

# Gauge model
length = 12
gauge_group = "Dinfh"
group_size = 2
O3 = 1
sweep_unit = 10
J1 = 0
J3 = 2

# SVM kernel and optimization
rank = 2
symmetrized = 1
color = "mono"
cluster = "single"
nu = 0.5

# Classifier
[classifier]
policy = "hyperplane"
[classifier.hyperplane.support]
J1 = 0
J3 = 1.92
[classifier.hyperplane.normal]
J1 = 0
J3 = 1

# Sweep policy
[sweep]
policy = "uniform_line"
samples = 100
uniform_line.N = 50
[sweep.uniform_line.a]
J1 = 0
J3 = 0
[sweep.uniform_line.b]
J1 = 0
J3 = 4

# Testing stage
[test]
policy = "line_scan"
line_scan.N = 28
[test.line_scan.a]
J1 = 0
J3 = 0
[test.line_scan.b]
J1 = 0
J3 = 4
