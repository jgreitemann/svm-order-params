# Simulation of the gauge model with D3h symmetry
#
# The phase diagram features three phases:
# O(3) (disordered), Dinfh (uniaxial), and D3h (biaxial).
# The transition from the disordered to the uniaxial phase is described by a
# rank-2 (quadrupolar) order parameter, while the transition from the uniaxial
# to the biaxial phase is described by a rank-3 order parameters. There is also
# a regime where both transitions happen at the same time; the SVM will learn
# either one, depending on the chosen rank. Here, we look for rank-3 order
# parameters.
# All three colors per site are considered, and a single-site cluster is used.
#
# The machine is trained at 100 points which cover the relevant area of the
# phase diagram in a 10 x 10 regular grid using the the "grid" sweep policy.
# At each point in the phase diagram, 100 spin configurations are sampled.
# The samples are consequently labeled either "O(3)", "Dinfh", or "D3h" based
# on the known phase diagram. This is done using the "phase_diagram" classifier
# which has the phase diagram for this model stored under the name "D3h".
#
# This results in a multiclassification problem with three distinct labels and
# three transitions between labels. Since the labeling indeed corresponds to the
# physical reality, i.e. represents the correct phase diagram, the decision
# functions capture the correct order parameters, given that the rank is
# appropriate.
#
# $ mpirun -n 4 gauge-sample D3h-phase-diagram.rank3.ini       (approx. 34 mins)
#     runs the simulation, collects samples and saves those to
#     D3h-phase-diagram.rank3.clone.h5.
#
# $ gauge-learn D3h-phase-diagram.rank3.clone.h5
#     classifies the samples according to the named phase diagram "D3h",
#     resulting in labels "O(3)", "Dinfh", and "D3h" and performs the SVM
#     optimization with respect to that, storing the optimization result in
#     D3h-phase-diagram.rank3.out.h5.
#
#     When using CONFIGMAPPING=LAZY, it is not necessary to harvest new samples
#     from the Monte Carlo simulation. Instead, the `rank` parameter may be
#     overriden when invoking `gauge-learn`:
#
#     $ gauge-learn D3h-phase-diagram.rank2.clone.h5 \
#         --rank=3 \
#         --outputfile=D3h-phase-diagram.rank3.out.h5
#
#     In `EAGER` mode, this option is not available as `gauge-sample` will
#     already have applied the rank-specific monomial mapping.
#
# $ gauge-coeffs D3h-phase-diagram.rank3.out.h5 -u
#     extracts the coefficient matrices corresponding to each of the three
#     transitions.
#     At rank 3, we successfully capture the Dinfh-D3h biaxial order, whereas we
#     do not capture the uniaxial order of the transition Dinfh-D3h, resulting
#     in a bias rho for that decision function which is different from one.
#     We again capture the *same* biaxial order for the O(3)-D3h transition for
#     which it occurs at simultaneously with the uniaxial order (which does not
#     make an appearance in the coefficient matrix).

# Simulation runtime
total_sweeps = 5000
thermalization_sweeps = 1000

# Gauge model
length = 12
gauge_group = "D3h"
group_size = 12
O3 = 1
sweep_unit = 10

# SVM kernel and optimization
rank = 3
symmetrized = 1
color = "triad"
cluster = "single"
nu = 0.4

# Classifier
[classifier]
policy = "phase_diagram"
phase_diagram.name = "D3h"

# Sweep policy
[sweep]
policy = "grid"
samples = 100
[sweep.grid]
N1 = 10
N2 = 10
[sweep.grid.a]
J1 = 0.
J3 = 0.
[sweep.grid.b]
J1 = 5.
J3 = 3.
