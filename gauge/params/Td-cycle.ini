# Simulation of the gauge model with octupolar order
#
# The associated order parameter is the rank-3 tensor l x m x n.
# All three colors per site are considered, and a single-site cluster is used.
#
# The critical temperature for this transition is T_c = 0.437 assuming J_1 = 1
# and J_3 = 1. When tuning the couplings (at constant temperature T = 1)
# instead, this translates into a critical coupling of J_1 = J_3 = 2.29.
#
# In contrast to the simulation in `hyperplane/Td`, here the machine is trained
# at only two points deep in either phase. The "cycle" sweep policy is used to
# generate 2000 samples at the two points J_1 = J_3 = 0 (disordered phase) and
# J_1 = J_3 = 4 (ordered phase).
#
# The samples are consequently labeled "P1" and "P2" according to which of the
# two points they were sampled at using the "fixed_from_sweep" classifier.
#
# $ mpirun -n 4 gauge-sample Td-cycle.ini                       (approx. 4 mins)
#     runs the simulation, collects samples and saves those to
#     Td-cycle.clone.h5.
#
# $ gauge-learn Td-cycle.clone.h5
#     classifies the samples according to the points P1 and P2 they have
#     been sampled from and performs the SVM optimization with respect to that,
#     storing the optimization result in Td-cycle.out.h5.
#
# $ gauge-coeffs Td-cycle.out.h5 -u
#     extracts the coefficient matrix describing the octupolar order parameter
#     for the single transition between samples from the points labeled "0" and
#     "1".
#
# $ gauge-coeffs Td-cycle.out.h5 -u --block=[lmn:lmn]
#     extracts the single block of the coefficient matrix corresponding to the
#     color-coordinates [lmn; lmn].
#
# $ gauge-coeffs Td-cycle.out.h5 -u --block=[lmn:lmn] --without-self-contractions
#     same as above, but self-contractions are programmatically removed.
#
# $ mpirun -n 4 gauge-test Td-cycle.out.h5 --total_sweeps=5000  (approx. 6 mins)
#     runs the MC simulation at 28 points along the line from J_1 = J_3 = 0.5
#     to J_1 = J_3 = 4, measuring the SVM decision function as an observable.
#     Since 2000 samples were taken at either point, the `total_sweeps`
#     parameter was higher than in the `hyperplane/Td` simulation. For the
#     testing stage, though, this would be overkill and, thus, it is overridden
#     here using the command line.
#     The results are written to Td-cycle.test.txt; the decision function can be
#     plotted using
#
#     gnuplot> plot 'Td-cycle.test.txt' u 2:7:8 w yerrorlines

# Simulation runtime
total_sweeps = 100000
thermalization_sweeps = 10000

# Gauge model
length = 8
gauge_group = "Td"
group_size = 24
O3 = 1
sweep_unit = 10

# SVM kernel and optimization
rank = 3
symmetrized = 1
color = "triad"
cluster = "single"
nu = 0.5

# Classifier
[classifier]
policy = "fixed_from_sweep"

# Sweep policy
[sweep]
policy = "cycle"
samples = 2000
[sweep.cycle.P1]
J1 = 0
J3 = 0
[sweep.cycle.P2]
J1 = 4
J3 = 4

# Testing stage
[test]
policy = "line_scan"
line_scan.N = 28
[test.line_scan.a]
J1 = 0.5
J3 = 0.5
[test.line_scan.b]
J1 = 4
J3 = 4
