# Simulation of the Heisenberg antiferromagnet on the Kagome lattice (high T)
#
# The Kagome AFM undergoes an order-by-disorder phase transition at T_c = 0.004,
# corresponding to a coplanar 120 degree state.
# This order is captured by a combination of a quadrupolar (rank-2) order
# parameter expressing the coplanarity and an octupolar (rank-3) order parameter
# expressing the triatic (120 degree) order within the common plane.
#
# Because of the excessively low temperatures involved, parallel tempering (PT)
# is required to thermalize at low temperatures. The parameter file `kagome.ini`
# demonstrates how to use PT on 64 low temperatures between 1e-5 and 10.
# This parameter file supplements the previous one by an additional 21
# temperatures between 10 and 1000. For these high temperatures, PT is not
# necessary, rendering it comparatively cheap.
#
# Build options:
#     CONFIG_MAPPING	LAZY
#     HAMILTONIAN       heisenberg
#     LATTICE           kagome
#
# $ mpirun -n 21 frustmag-sample kagome.ini
#     runs the simulation, collects samples and saves those to
#     kagome.clone.h5. This clone file is subsequently passed to frustmag-learn
#     using the `--merge` flag as explained in `kagome.ini`.
#

# Simulation runtime
SEED = 912867987
timelimit = 140000
total_sweeps = 25000000
thermalization_sweeps = 10000000

# TK-SVM feature mapping
symmetrized = 1
rank = 2

# Parallel tempering
#     The update_sweeps parameter is left defaulted to the largest representable
#     integer. Alternatively, it could be set to some large number exceeding the
#     total number of sweeps. This has the effect of disabling parallel
#     tempering on this high-temperature run.
[pt]
# update_sweeps = 10000000000

[hamiltonian.heisenberg]
temp = 1.

# Kagome lattice of 32 x 32 unit cells (3072 spins in total) with periodic
# boundary conditions
[lattice.bravais]
length = 32
periodic = 1

# Classifier policy suitable for graph analysis
[classifier]
policy = "fixed_from_sweep"

# Sample additional 21 log-spaced temperatures in (10, 1000]
[sweep]
policy = "log_scan"
samples = 1000
[sweep.log_scan]
N = 21
a.temp = 12.45197
b.temp = 1000
